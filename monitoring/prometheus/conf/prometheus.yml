global:
  scrape_interval:     15s
  evaluation_interval: 15s

  external_labels:
    monitor: 'monitoring'

rule_files:
  - "/etc/prometheus/rules.yml"

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

scrape_configs:
  - job_name: 'global-tasks'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks
    relabel_configs:
      # Only keep containers with service mode global.
      - source_labels: [__meta_dockerswarm_service_mode]
        regex: global
        action: keep
      # Only keep containers that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # Only keep containers in prometheus network.
      - source_labels: [__meta_dockerswarm_network_name]
        regex: private-network1
        action: keep
      # Use Swarm service name as Prometheus job label.
      - source_labels: [__meta_dockerswarm_service_name]
        target_label: job
      # Save swarm stack name
      - source_labels: [__meta_dockerswarm_service_label_com_docker_stack_namespace]
        target_label: stack
      # Set hostname as instance label
      - source_labels: [__meta_dockerswarm_node_hostname]
        target_label: instance
      # Default (prometheus.port label) should be 80
      - source_labels: [__meta_dockerswarm_service_label_prometheus_port]
        regex: .+
        action: keep
      # Extract container ip from address
      - source_labels: [__address__]
        regex: '([^:]+):\d+'
        target_label: __container_ip
      # Set address to container ip:(prometheus.port label)
      - source_labels: [__container_ip, __meta_dockerswarm_service_label_prometheus_port]
        target_label: __address__
        regex: '(.+);(.+)'
        replacement: $1:$2
      # Default (prometheus.path label) should be /metrics
      - source_labels: [__meta_dockerswarm_service_label_prometheus_path]
        target_label: __meta_dockerswarm_service_label_prometheus_path
        regex: '()'
        replacement: '/metrics'
      - source_labels: [__meta_dockerswarm_service_label_prometheus_path]
        target_label: __metrics_path__
        
  - job_name: 'replicated-tasks'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks
    relabel_configs:
      # Only keep containers with service mode replicated.
      - source_labels: [__meta_dockerswarm_service_mode]
        regex: replicated
        action: keep
      # Only keep containers that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # Only keep containers in prometheus network.
      - source_labels: [__meta_dockerswarm_network_name]
        regex: private-network1
        action: keep
      # Use Swarm service name as Prometheus job label.
      - source_labels: [__meta_dockerswarm_service_name]
        target_label: job
      # Save swarm stack name
      - source_labels: [__meta_dockerswarm_service_label_com_docker_stack_namespace]
        target_label: stack
      - source_labels: [__meta_dockerswarm_task_id]
        target_label: instance
      # Default (prometheus.port label) should be 80
      - source_labels: [__meta_dockerswarm_service_label_prometheus_port]
        target_label: __meta_dockerswarm_service_label_prometheus_port
        regex: .+
        action: keep
      # Extract container ip from address
      - source_labels: [__address__]
        regex: '([^:]+):\d+'
        target_label: __container_ip
      # Set address to container ip:(prometheus.port label)
      - source_labels: [__container_ip, __meta_dockerswarm_service_label_prometheus_port]
        target_label: __address__
        regex: '(.+);(.+)'
        replacement: $1:$2
      # Default (prometheus.path label) should be /metrics
      - source_labels: [__meta_dockerswarm_service_label_prometheus_path]
        target_label: __meta_dockerswarm_service_label_prometheus_path
        regex: '()'
        replacement: '/metrics'

      - source_labels: [__meta_dockerswarm_service_label_prometheus_path]
        target_label: __metrics_path__

      - source_labels: [meta_dockerswarm_node_status_]
        target_label: _node_status_
      
      - source_labels: [__meta_dockerswarm_task_desired_state_]
        target_label: _desired_state_

      - source_labels: [__meta_dockerswarm_task_state_]
        target_label: _task_state_ 

      - source_labels: [__meta_dockerswarm_container_label_com_docker_stack_namespace_]
        target_label: _namespace_container_

      - source_labels: [__meta_dockerswarm_node_availability_]
        target_label: _node_availability_ #Estado atual de disponibilidade do n√≥ no Swarm
        